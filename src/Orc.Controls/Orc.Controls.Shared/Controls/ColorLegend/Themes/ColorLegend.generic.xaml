<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Orc.Controls"
                    xmlns:catel="http://catel.codeplex.com">

    <controls:MultipleCommandParameterConverter x:Key="MultipleCommandParametersConverter"/>
    <Color x:Key="Color_Control_1">#eeeeee</Color>
    <SolidColorBrush x:Key="Brush_Control_1" Color="{StaticResource Color_Control_1}"/>

    <Color x:Key="Color_Highlight_1">#707070</Color>
    <SolidColorBrush x:Key="Brush_Highlight_1" Color="{StaticResource Color_Highlight_1}"/>

    <Geometry x:Key="SettingsGeometry">M391.731,618.796C380.8,657.999 344.804,686.796 302.135,686.796C259.467,686.796 223.471,657.999 212.54,618.796L34.704,618.796L34.704,568.796L212.54,568.796C223.471,
        529.594 259.467,500.796 302.135,500.796C344.804,500.796 380.8,529.594 391.731,568.796L734.704,568.796L734.704,618.796L391.731,618.796ZM302.135,547.296C327.799,547.296 348.635,
        568.132 348.635,593.796C348.635,619.46 327.799,640.296 302.135,640.296C276.471,640.296 255.635,619.46 255.635,593.796C255.635,568.132 276.471,547.296 302.135,547.296ZM653.045,
        411.63C642.115,450.832 606.119,479.63 563.45,479.63C520.781,479.63 484.786,450.832 473.855,411.63L33.296,411.63L33.296,361.63L473.855,361.63C484.786,322.427 520.781,293.63 563.45,
        293.63C606.119,293.63 642.115,322.427 653.045,361.63L733.296,361.63L733.296,411.63L653.045,411.63ZM563.45,340.13C589.114,340.13 609.95,360.966 609.95,386.63C609.95,412.294 589.114,
        433.13 563.45,433.13C537.786,433.13 516.95,412.294 516.95,386.63C516.95,360.966 537.786,340.13 563.45,340.13ZM309.205,199.292C298.244,238.45 262.271,267.204 219.634,267.204C176.998,
        267.204 141.024,238.45 130.064,199.292L33.296,199.292L33.296,149.292L130.014,149.292C140.916,110.044 176.934,81.204 219.634,81.204C262.335,81.204 298.353,110.044 309.254,149.292L733.296,
        149.292L733.296,199.292L309.205,199.292ZM219.634,127.704C245.298,127.704 266.134,148.54 266.134,174.204C266.134,199.868 245.298,220.704 219.634,220.704C193.97,220.704 173.134,199.868 173.134,
        174.204C173.134,148.54 193.97,127.704 219.634,127.704Z</Geometry>

    <Style x:Key="SearchBoxBorderStyle"  TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource ColorLegendAccentBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ColorLegendButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="4 2 4 2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="Chrome" BorderBrush="LightGray" BorderThickness="1" Background="#FFF4F4F4" SnapsToDevicePixels="True">
                        <Grid>
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Grid x:Name="Filter" Background="Transparent" Opacity="0.7"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Chrome" Value="{DynamicResource ColorLegendHighlightBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="Chrome" Value="{DynamicResource ColorLegendAccentBrush}"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="BorderBrush" TargetName="Chrome" Value="{DynamicResource ColorLegendAccentBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="Filter" Value="WhiteSmoke"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ClearButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="ToolTipService.InitialShowDelay" Value="900" />
        <Setter Property="ToolTipService.ShowDuration" Value="20000" />
        <Setter Property="ToolTipService.BetweenShowDelay" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="Chrome" BorderThickness="0" Background="#FFF4F4F4" SnapsToDevicePixels="True">
                        <Path x:Name="Path" Data="M0,1.05 L1.05,0 8.33,7.26 15.55,0.0 16.6,1.0 9.3,8.3 16.6,15.55 15.55,16.6 8.3,9.3 1,16.6 0,15.6 7.3,8.3 z"
                              Fill="#575757" Margin="6" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Chrome" Value="{DynamicResource ColorLegendHighlightBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="Chrome" Value="{DynamicResource ColorLegendAccentBrush}"/>
                            <Setter Property="Fill" TargetName="Path" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#FFADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ColorLegendCheckBoxStyle"  TargetType="{x:Type CheckBox}">
        <Setter Property="Padding" Value="5,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent" SnapsToDevicePixels="true">
                        <BulletDecorator.Bullet>
                            <Border x:Name="CheckBoxBorder" Height="12" Width="12" BorderBrush="LightGray"
                                    BorderThickness="1" Background="White">
                                <Grid>
                                    <Path x:Name="CheckMark" Data="M7.2,5 L5.5,7.16 4.16,6.3 3.5,6.7 5.5,8.4 8.6,5.25 C8.6,5.25 8,4.7 7.22,5" 
                                      Height="Auto" Width="Auto" Stretch="Fill" Fill="Black" Margin="1,1.007,1,1"/>
                                    <Border x:Name="ThreeStateCheckMark" BorderThickness="0" Margin="1" CornerRadius="1"
                                            Visibility="Hidden" Background="{DynamicResource ColorLegendDarkHighlightBrush}" />
                                </Grid>
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#FFADADAD"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="CheckBoxBorder" Value="{DynamicResource ColorLegendHighlightBrush}"/>
                            <Setter Property="BorderBrush" TargetName="CheckBoxBorder" Value="{DynamicResource ColorLegendAccentBrush}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="ThreeStateCheckMark" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ColorLegendListBoxItemStyle"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true"
                            BorderThickness="1"
                            BorderBrush="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{DynamicResource ColorLegendDarkHighlightBrush}" />

                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="{DynamicResource ColorLegendAccentBrush}" />
                        </Trigger>

                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource ColorLegendHighlightBrush}" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true" />

                                <Condition Property="IsMouseOver"
                                           Value="true" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="White" />

                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="{DynamicResource ColorLegendAccentBrush}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true" />

                                <Condition Property="Selector.IsSelectionActive"
                                           Value="False" />
                            </MultiTrigger.Conditions>

                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="{DynamicResource ColorLegendHighlightBrush}" />
                            
                            <Setter Property="Foreground"
                                    Value="White" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:ColorLegend}">
        <Style.Resources>
            <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource ColorLegendCheckBoxStyle}"/>
            <Style TargetType="{x:Type TabItem}" BasedOn="{x:Null}"/>
            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ColorLegendButtonStyle}" />
            <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource ColorLegendListBoxItemStyle}"/>
        </Style.Resources>
        <Setter Property="Background" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ColorLegend}">
                    <Border Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                            BorderBrush="LightGray"
                            BorderThickness="1">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition x:Name="toolsContainerRow" Height="34" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="30"/>
                            </Grid.RowDefinitions>
<<<<<<< HEAD:src/Orc.Controls/Orc.Controls.Shared/Controls/ColorLegend/Themes/ColorLegend.xaml
                            
                            <Border BorderBrush="LightGray" BorderThickness="0" Background="WhiteSmoke">
                                <ContentControl Content="{TemplateBinding Header}"/>
                                <!--<TextBlock FontWeight="Medium" FontSize="14" Margin="4" TextAlignment="Left"
                                           Text="{Binding Path=OperationColorAttribute, RelativeSource={RelativeSource TemplatedParent}, StringFormat=Legend {0}}">
                                </TextBlock>-->
                            </Border>
                            <Border BorderBrush="LightGray" BorderThickness="0 1 0 1" Grid.Row="1">
=======

                            <ContentControl Content="{TemplateBinding Header}"
                                            Visibility="{TemplateBinding Header, Converter={catel:ReferenceToCollapsingVisibilityConverter}}" />

                            <!-- Filler border in case we are showing a legend -->
                            <Border BorderBrush="LightGray" BorderThickness="0 0 0 1" Grid.Row="1" 
                                    Visibility="{TemplateBinding Header, Converter={catel:ReferenceToCollapsingVisibilityConverter}}" />

                             <Border BorderBrush="LightGray" BorderThickness="0 0 0 1" Grid.Row="2">
>>>>>>> origin/develop:src/Orc.Controls/Orc.Controls.Shared/Controls/ColorLegend/Themes/ColorLegend.generic.xaml
                                <Grid x:Name="toolsContainer" Margin="4" Height="24" 
                                      Visibility="{Binding ShowToolBox, RelativeSource={RelativeSource TemplatedParent}, Converter={catel:BooleanToCollapsingVisibilityConverter}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="45"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <controls:DropDownButton Grid.Column="0" Margin="0 0 5 0" Width="40" ShowDefaultButton="False" EnableTransparentBackground="True"
                                                             AccentColorBrush="{DynamicResource ColorLegendAccentBrush}"
                                                             Visibility="{Binding ShowSettings, RelativeSource={RelativeSource TemplatedParent}, Converter={catel:BooleanToCollapsingVisibilityConverter}}">
                                        <controls:DropDownButton.Header>
                                            <Grid>
                                                <Viewbox Height="15">
                                                    <Path Data="{StaticResource SettingsGeometry}"
                                                          Fill="#575757" HorizontalAlignment="Center" Margin="0" SnapsToDevicePixels="True"
                                                          Stretch="Fill" UseLayoutRounding="True" VerticalAlignment="Center"/>
                                                </Viewbox>
                                            </Grid>
                                        </controls:DropDownButton.Header>
                                        <controls:DropDownButton.DropDown>
                                            <ContextMenu>
                                                <MenuItem>
                                                    <MenuItem.Header>
                                                        <CheckBox Content="Show Visibility Column" IsChecked="{Binding ShowColorVisibilityControls, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ColorLegend}}}" />
                                                    </MenuItem.Header>
                                                </MenuItem>
                                                <MenuItem>
                                                    <MenuItem.Header>
                                                        <CheckBox Content="Allow Color Edit" IsChecked="{Binding AllowColorEditing, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ColorLegend}}}" />
                                                    </MenuItem.Header>
                                                </MenuItem>
                                                <MenuItem>
                                                    <MenuItem.Header>
                                                        <CheckBox Content="Use Regex search" IsChecked="{Binding UseRegexFiltering, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ColorLegend}}}" />
                                                    </MenuItem.Header>
                                                </MenuItem>
                                            </ContextMenu>
                                        </controls:DropDownButton.DropDown>
                                    </controls:DropDownButton>

                                    <controls:FilterBoxControl Grid.Column="1" Watermark="{TemplateBinding FilterWatermark}" PropertyName="Color"
                                                               Visibility="{Binding ShowSearchBox, RelativeSource={RelativeSource TemplatedParent}, Converter={catel:BooleanToCollapsingVisibilityConverter}}"
                                                               FilterSource="{Binding ItemsSource, RelativeSource={RelativeSource TemplatedParent}}" 
                                                               Text="{Binding Filter, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Grid>
                            </Border>
                            
                            <ListBox Grid.Row="3" ItemsSource="{Binding FilteredItemsSource, RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="0" x:Name="PART_List" HorizontalContentAlignment="Stretch">
                                <ListBox.ItemTemplate>
                                    <DataTemplate DataType="controls:IColorLegendItem">
                                        <Grid HorizontalAlignment="Stretch" Margin="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition x:Name="visibilityCheckColumn" Width="15"/>
                                                <ColumnDefinition Width="24"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <CheckBox x:Name="visibilityCheckbox" Grid.Column="0" IsChecked="{Binding IsChecked}" VerticalAlignment="Center"
                                                      Visibility="{Binding ShowColorVisibilityControls, RelativeSource={RelativeSource AncestorType={x:Type controls:ColorLegend}}, 
                                                                    Converter={catel:BooleanToCollapsingVisibilityConverter}}" />
                                            <Button x:Name="PART_ButtonColorChange" Height="14" VerticalAlignment="Center" Grid.Column="1"
                                                    Command="{Binding ChangeColor, RelativeSource={RelativeSource AncestorType=controls:ColorLegend}}">
                                                <Button.CommandParameter>
                                                    <MultiBinding Converter="{StaticResource MultipleCommandParametersConverter}">
                                                        <Binding ElementName="PART_ButtonColorChange" />
                                                        <Binding />
                                                    </MultiBinding>
                                                </Button.CommandParameter>
                                                <Button.Template>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Grid Background="Transparent">
                                                            <VisualStateManager.VisualStateGroups>
                                                                <VisualStateGroup x:Name="CommonStates">
                                                                    <VisualState x:Name="Normal" />
                                                                    <VisualState x:Name="MouseOver" >
                                                                        <Storyboard>
                                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="arrow" Storyboard.TargetProperty="Visibility">
                                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Disabled">

                                                                    </VisualState>
                                                                </VisualStateGroup>
                                                            </VisualStateManager.VisualStateGroups>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="14"/>
                                                                <ColumnDefinition Width="10"/>
                                                            </Grid.ColumnDefinitions>

                                                            <Ellipse Width="14" Height="14">
                                                                <Ellipse.Fill>
                                                                    <SolidColorBrush Color="{Binding Color, UpdateSourceTrigger=PropertyChanged}" />
                                                                </Ellipse.Fill>
                                                            </Ellipse>

                                                            <Path x:Name="arrow" Data="M 0 0 L 2.5 3 L 5 0 Z" Fill="Black" HorizontalAlignment="Center"
                                                            VerticalAlignment="Center" Stretch="None" Grid.Column="1" Width="5" Visibility="Collapsed"/>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Button.Template>
                                            </Button>

                                            <TextBlock Text="{Binding Description}" Grid.Column="2"/>
                                            <TextBlock Text="{Binding AdditionalData}" Grid.Column="3" Margin="0 0 10 0"/>
                                        </Grid>
                                        <DataTemplate.Triggers>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition SourceName="visibilityCheckbox" Property="Visibility" Value="Collapsed"/>
                                                </MultiTrigger.Conditions>
                                                <Setter TargetName="visibilityCheckColumn" Property="Width" Value="0"/>
                                            </MultiTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>

                            <Border Grid.Row="4" BorderBrush="LightGray" BorderThickness="0 1 0 0">
                                <Grid Visibility="{Binding ShowBottomToolBox, RelativeSource={RelativeSource TemplatedParent}, Converter={catel:BooleanToCollapsingVisibilityConverter}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="5"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <CheckBox x:Name="PART_All_Visible" Content="Check all" VerticalAlignment="Center" Margin="4 0" IsThreeState="True"
                                              IsChecked="{Binding IsAllVisible, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                              Visibility="{Binding ShowColorVisibilityControls, RelativeSource={RelativeSource AncestorType={x:Type controls:ColorLegend}}, 
                                                            Converter={catel:BooleanToCollapsingVisibilityConverter}}" />
                                    <Grid Grid.Column="2">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition  MinWidth="100" Width="*"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Margin="4" Foreground="Gray" TextAlignment="Left" VerticalAlignment="Center" Text="{Binding SelectedItems.Count, ElementName=PART_List, StringFormat='Selected Items: {0}'}"/>
                                        <Button x:Name="PART_UnselectAll" Grid.Column="1" Margin="2" Width="110" Content="Clear selection" />
                                    </Grid>
                                </Grid>
                            </Border>
                            
                            <Popup x:Name="PART_Popup_Color_Board" 
                                   IsOpen="{Binding IsColorSelecting, RelativeSource={RelativeSource TemplatedParent}}" 
                                   Focusable="False" VerticalOffset="2"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="toolsContainer" Property="Visibility" Value="Collapsed"></Condition>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="toolsContainerRow" Property="Height" Value="0"></Setter>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>