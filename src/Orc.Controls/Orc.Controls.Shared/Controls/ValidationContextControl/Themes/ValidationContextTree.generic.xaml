<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:Orc.Controls.Converters"
                    xmlns:catel="http://catel.codeplex.com">

    <converters:TreeViewItemToLeftMarginValueConverter Length="15"
                                                       x:Key="LengthConverter" />
    <SolidColorBrush x:Key="ValidationContextTreeViewDisabledForegroundBrush"
                     Color="DarkGray" />

    <PathGeometry x:Key="TreeArrow"
                  Figures="M0,0 L0,6 L6,0 z" />

    <Style x:Key="ValidationContextExpandCollapseToggleStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="Width"
                Value="16" />
        <Setter Property="Height"
                Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="Transparent"
                            Height="16"
                            Padding="5,5,5,5"
                            Width="16">
                        <Path x:Name="ExpandPath"
                              Data="{StaticResource TreeArrow}"
                              Fill="Transparent"
                              Stroke="Black">
                            <Path.RenderTransform>
                                <RotateTransform Angle="135"
                                                 CenterY="3"
                                                 CenterX="3" />
                            </Path.RenderTransform>
                        </Path>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter Property="RenderTransform"
                                    TargetName="ExpandPath">
                                <Setter.Value>
                                    <RotateTransform Angle="180"
                                                     CenterY="3"
                                                     CenterX="3" />
                                </Setter.Value>
                            </Setter>

                            <Setter Property="Fill"
                                    TargetName="ExpandPath"
                                    Value="Black" />

                            <Setter Property="Stroke"
                                    TargetName="ExpandPath"
                                    Value="Black" />
                        </Trigger>

                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Stroke"
                                    TargetName="ExpandPath"
                                    Value="{DynamicResource ValidationContextControlAccentBrush}" />

                            <Setter Property="Fill"
                                    TargetName="ExpandPath"
                                    Value="{DynamicResource ValidationContextControlAccentBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="True" />
                                <Condition Property="IsChecked"
                                           Value="True" />
                            </MultiTrigger.Conditions>

                            <Setter Property="Stroke"
                                    TargetName="ExpandPath"
                                    Value="{DynamicResource ValidationContextControlAccentBrush}" />

                            <Setter Property="Fill"
                                    TargetName="ExpandPath"
                                    Value="{DynamicResource ValidationContextControlAccentBrush}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="True" />
                                <Condition Property="IsChecked"
                                           Value="False" />
                            </MultiTrigger.Conditions>

                            <Setter Property="Stroke"
                                    TargetName="ExpandPath"
                                    Value="{DynamicResource ValidationContextControlAccentBrush}" />

                            <Setter Property="Fill"
                                    TargetName="ExpandPath"
                                    Value="Transparent" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ValidationContextTreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ValidationContextTreeViewItemStyle"
           TargetType="{x:Type TreeViewItem}">
        <Setter Property="IsExpanded"
                Value="{Binding IsExpanded, Mode=TwoWay}" />

        <Setter Property="Visibility"
                Value="{Binding IsVisible, Converter={catel:BooleanToCollapsingVisibilityConverter}}" />

        <Setter Property="Background"
                Value="Transparent" />

        <Setter Property="MinHeight"
                Value="14" />

        <Setter Property="HorizontalContentAlignment"
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />

        <Setter Property="VerticalContentAlignment"
                Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />

        <Setter Property="Padding"
                Value="2" />

        <Setter Property="FocusVisualStyle"
                Value="{StaticResource ValidationContextTreeViewItemFocusVisual}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <StackPanel>
                        <Border Name="Bd"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}">
                            <Grid Margin="{Binding Converter={StaticResource LengthConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="15" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <ToggleButton x:Name="Expander"
                                              Grid.Column="0"
                                              Style="{DynamicResource ValidationContextExpandCollapseToggleStyle}"
                                              IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" />

                                <ContentPresenter x:Name="PART_Header"
                                                  Grid.Column="1"
                                                  ContentSource="Header"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                            </Grid>
                        </Border>

                        <ItemsPresenter x:Name="ItemsHost" />
                    </StackPanel>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded"
                                 Value="false">
                            <Setter TargetName="ItemsHost"
                                    Property="Visibility"
                                    Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="HasItems"
                                 Value="false">
                            <Setter TargetName="Expander"
                                    Property="Visibility"
                                    Value="Hidden" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader"
                                           Value="false" />

                                <Condition Property="Height"
                                           Value="Auto" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="PART_Header"
                                    Property="MinHeight"
                                    Value="21" />
                        </MultiTrigger>

                        <Trigger Property="IsSelected"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="{DynamicResource ValidationContextControlDarkHighlightBrush}" />
                        </Trigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=DataContext.IsActive}"
                                     Value="True">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="WhiteSmoke" />
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=DataContext.IsActive}"
                                           Value="True" />

                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}"
                                           Value="True" />
                            </MultiDataTrigger.Conditions>

                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource ValidationContextControlDarkHighlightBrush}" />
                        </MultiDataTrigger>

                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{StaticResource ValidationContextTreeViewDisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>