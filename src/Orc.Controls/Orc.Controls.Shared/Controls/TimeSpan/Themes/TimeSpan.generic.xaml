<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:catel="http://catel.codeplex.com"
                    xmlns:local="clr-namespace:Orc.Controls"
                    xmlns:converters="clr-namespace:Orc.Controls.Converters">

    <converters:TimeSpanToTotalStringConverter x:Key="TimeSpanToTotalConverter" />
    
    <Style x:Key="RatioSignStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=IsMouseOver}" Value="True">
                <Setter Property="Visibility" Value="Hidden"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=IsKeyboardFocusWithin}" Value="True">
                <Setter Property="Visibility" Value="Hidden"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="LettersStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Visibility" Value="Hidden"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="DarkGray"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=IsMouseOver}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=IsKeyboardFocusWithin}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:TimeSpanControl}">
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="BorderBrush" Value="LightGray"/>
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                            <Condition Binding="{Binding Name, RelativeSource={RelativeSource Self}}" Value="MainContainer" />
                            <Condition Binding="{Binding Value, Converter={catel:ReferenceToBooleanConverter}}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="ToolTip">
                            <Setter.Value>
                                <Grid Margin="5 2 5 2">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Grid.Row="0" Text="Total:" HorizontalAlignment="Left"/>
                                    <TextBlock Grid.Column="0" Grid.Row="1" Text="Days" HorizontalAlignment="Left" Margin="10 0 10 0"/>
                                    <TextBlock Grid.Column="0" Grid.Row="2" Text="Hours" HorizontalAlignment="Left" Margin="10 0 10 0"/>
                                    <TextBlock Grid.Column="0" Grid.Row="3" Text="Minutes" HorizontalAlignment="Left" Margin="10 0 10 0"/>
                                    <TextBlock Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left"
                                           Text="{Binding Value, Converter={StaticResource TimeSpanToTotalConverter}, ConverterParameter=Days}"/>
                                    <TextBlock Grid.Column="1" Grid.Row="2" HorizontalAlignment="Left"
                                           Text="{Binding Value, Converter={StaticResource TimeSpanToTotalConverter}, ConverterParameter=Hours}"/>
                                    <TextBlock Grid.Column="1" Grid.Row="3" HorizontalAlignment="Left"
                                           Text="{Binding Value, Converter={StaticResource TimeSpanToTotalConverter}, ConverterParameter=Minutes}"/>
                                </Grid>
                            </Setter.Value>
                        </Setter>
                    </MultiDataTrigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource TimeSpanAccentBrush}" />
                    </Trigger>
                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource TimeSpanAccentBrush}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style BasedOn="{x:Null}" TargetType="{x:Type local:NumericTextBox}">
                <Setter Property="TextAlignment" Value="Center"/>
                <Setter Property="Margin" Value="2 0 0 0"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="AllowDrop" Value="true"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="true">
                                <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
    </Style>
    
</ResourceDictionary>
